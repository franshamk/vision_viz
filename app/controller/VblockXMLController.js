/*
 * File: app/controller/VblockXMLController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.VblockXMLController', {
    extend: 'Ext.app.Controller',

    config: {
    },

    fetchVBlockXML: function(url) {


        var cas = "https://fm-sim-nimsoft.internal.superna.net/cas/v1/tickets";
        var params = "username=admin&password=dangerous";

        Ext.Ajax.request({
            method: 'POST',
            url: cas,
            params: {
                username: 'admin',
                password: 'dangerous'
            },
            useDefaultXhrHeader: false,
            success: function(data) {
                alert(data.responseText);
            }
        });

        /*function xdr(url, method, data, callback, errback) {
        var req;

        if(XMLHttpRequest) {
        console.log("in xmlhttp");
        req = new XMLHttpRequest();

        if('withCredentials' in req) {
        req.open(method, url, true);
        req.onerror = errback;
        req.onreadystatechange = function() {
        if (req.readyState === 4) {
        if (req.status >= 200 && req.status < 400) {
        callback(req.responseText);
        } else {
        console.log(req);
        errback(new Error('Response returned with non-OK status'));
        }
        }
        };
        req.send(data);
        }
        } else if(XDomainRequest) {
        console.log("in xdomain");
        req = new XDomainRequest();
        req.open(method, url);
        req.onerror = errback;
        req.onload = function() {
        callback(req.responseText);
        };
        req.send(data);
        } else {
        errback(new Error('CORS not supported'));
        }
        }

        xdr(cas, "POST", params, function(data) {alert('okay, mother fuckers!')}, function(err) {alert(err);});*/

    }

});